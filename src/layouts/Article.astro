---
import type { MarkdownHeading } from 'astro';
import { Icon } from 'astro-icon/components';

import Accordion from '$components/base/Accordion.astro';
import Comments from '$components/blog/Comments.astro';
import ShareButtons from '$components/blog/share/ShareButtons.astro';
import Tag from '$components/blog/Tag.astro';
import ToC from '$components/blog/ToC.astro';
import Layout from '$layouts/Page.astro';
import { articleTransition } from '$utils/animation';
import { formatDate, isOlderThan } from '$utils/helpers/date';
import { isProduction } from '$utils/helpers/misc';

import '$styles/article.css';

interface Props {
  id?: string;
  title: string;
  description: string;
  draft?: boolean;
  created: string | Date;
  modified?: string | Date;
  tags: string[];
  minutesRead: string;
  comments?: boolean;
  headings: MarkdownHeading[];
  fullWidth?: boolean;
}

const {
  id,
  title,
  description,
  draft,
  created,
  modified,
  tags,
  minutesRead,
  comments,
  headings,
  fullWidth,
} = Astro.props;

const checkComments = () => isProduction && comments;

const createdAt = created ? formatDate(created) : undefined;
const modifiedAt = modified ? formatDate(modified) : undefined;

const isOldArticle = created && isOlderThan(created, 365);

const image = {
  src: `/article/${id}.png`,
  alt: title,
};
---

<Layout {description} {title} ogImage={image} created={createdAt} {fullWidth}>
  <div>
    {
      draft && (
        <div class="mx-auto flex max-w-4xl flex-col gap-1 border-2 border-ctp-pink p-3 px-8">
          <div class="flex flex-row gap-x-1 font-bold">
            <Icon size={25} name="mdi:alert-circle" aria-hidden={true} />
            <h1>Warning</h1>
          </div>
          <span>This article is a draft and is not ready for public viewing.</span>
        </div>
      )
    }

    <header class:list={['mx-auto flex max-w-4xl flex-col gap-4', fullWidth && 'px-8']}>
      <div class="flex flex-col gap-2">
        <h1
          class="text-4xl font-semibold"
          transition:name={`article-${id}-title`}
          transition:animate={articleTransition}
        >
          {title}
        </h1>

        <p
          class="transition duration-150 ease-in-out"
          transition:name={`article-${id}-description`}
          transition:animate={articleTransition}
        >
          {description}
        </p>
      </div>

      <div
        class="flex flex-col gap-x-3 gap-y-1.5 sm:flex-row"
        transition:name={`article-${id}-metadata`}
        transition:animate={articleTransition}
      >
        <time
          class="flex flex-row items-center gap-x-1.5"
          datetime={formatDate(created)}
          title={`Published on ${createdAt}`}
        >
          <Icon size={25} name="mdi:calendar" aria-hidden={true} />
          {createdAt}
        </time>

        {
          modifiedAt && (
            <time
              class="flex flex-row items-center gap-x-1.5"
              datetime={formatDate(modifiedAt)}
              title={`Last edited on ${modifiedAt}`}
            >
              <Icon size={25} name="mdi:pencil" aria-hidden={true} />
              {modifiedAt}
            </time>
          )
        }

        <div class="flex flex-row items-center gap-x-1.5">
          <Icon size={25} name="mdi:clock-outline" aria-hidden={true} />
          {minutesRead}
        </div>
      </div>

      <span
        class="flex flex-row items-center gap-x-1.5"
        transition:name={`article-${id}-tags`}
        transition:animate={articleTransition}
      >
        <div class="flex flex-row gap-x-3">
          {tags.map((tag) => <Tag {tag} />)}
        </div>
      </span>
    </header>

    {
      isOldArticle && (
        <div class:list={['mx-auto mb-4 max-w-4xl pt-8', fullWidth && 'px-8']}>
          <Accordion title="Warning!" severity="warning">
            This article was made a long time ago. The information may be outdated or no longer
            relevant.
          </Accordion>
        </div>
      )
    }

    <div
      class:list={[
        'mx-auto max-w-4xl pt-6',
        fullWidth &&
          'px-8 2xl:container 2xl:grid 2xl:max-w-none 2xl:grid-cols-[minmax(300px,1fr),minmax(0,65ch),1fr] 2xl:items-start 2xl:gap-10',
      ]}
    >
      {
        headings && headings.length > 0 && fullWidth && (
          <aside class="sticky top-8 hidden max-h-screen w-fit 2xl:col-start-1 2xl:block 2xl:pr-8">
            <ToC {headings} />
          </aside>
        )
      }

      <section
        class:list={[
          'article-content prose break-words pt-3 dark:prose-invert',
          fullWidth && '2xl:col-start-2 2xl:col-end-3 2xl:pl-1.5',
        ]}
      >
        <slot />

        <div class="flex flex-wrap items-center gap-4 py-8">
          <ShareButtons {title} {description} articleUrl={Astro.url.href} />
        </div>

        {checkComments() && <Comments />}
      </section>
    </div>
  </div>
</Layout>

<style>
  html {
    @apply overflow-y-scroll;
  }
</style>
